//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.5-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.25 at 04:21:01 PM PDT 
//


package org.llrp.ltkGenerator.generated;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for fieldType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="fieldType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="u1"/>
 *     &lt;enumeration value="u2"/>
 *     &lt;enumeration value="u1v"/>
 *     &lt;enumeration value="u8"/>
 *     &lt;enumeration value="s8"/>
 *     &lt;enumeration value="u8v"/>
 *     &lt;enumeration value="s8v"/>
 *     &lt;enumeration value="utf8v"/>
 *     &lt;enumeration value="u16"/>
 *     &lt;enumeration value="s16"/>
 *     &lt;enumeration value="u16v"/>
 *     &lt;enumeration value="s16v"/>
 *     &lt;enumeration value="u32"/>
 *     &lt;enumeration value="s32"/>
 *     &lt;enumeration value="u32v"/>
 *     &lt;enumeration value="s32v"/>
 *     &lt;enumeration value="u64"/>
 *     &lt;enumeration value="s64"/>
 *     &lt;enumeration value="u64v"/>
 *     &lt;enumeration value="s64v"/>
 *     &lt;enumeration value="u96"/>
 *     &lt;enumeration value="bytesToEnd"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "fieldType")
@XmlEnum
public enum FieldType {

    @XmlEnumValue("u1")
    U_1("u1"),
    @XmlEnumValue("u2")
    U_2("u2"),
    @XmlEnumValue("u1v")
    U_1_V("u1v"),
    @XmlEnumValue("u8")
    U_8("u8"),
    @XmlEnumValue("s8")
    S_8("s8"),
    @XmlEnumValue("u8v")
    U_8_V("u8v"),
    @XmlEnumValue("s8v")
    S_8_V("s8v"),
    @XmlEnumValue("utf8v")
    UTF_8_V("utf8v"),
    @XmlEnumValue("u16")
    U_16("u16"),
    @XmlEnumValue("s16")
    S_16("s16"),
    @XmlEnumValue("u16v")
    U_16_V("u16v"),
    @XmlEnumValue("s16v")
    S_16_V("s16v"),
    @XmlEnumValue("u32")
    U_32("u32"),
    @XmlEnumValue("s32")
    S_32("s32"),
    @XmlEnumValue("u32v")
    U_32_V("u32v"),
    @XmlEnumValue("s32v")
    S_32_V("s32v"),
    @XmlEnumValue("u64")
    U_64("u64"),
    @XmlEnumValue("s64")
    S_64("s64"),
    @XmlEnumValue("u64v")
    U_64_V("u64v"),
    @XmlEnumValue("s64v")
    S_64_V("s64v"),
    @XmlEnumValue("u96")
    U_96("u96"),
    @XmlEnumValue("bytesToEnd")
    BYTES_TO_END("bytesToEnd");
    private final String value;

    FieldType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FieldType fromValue(String v) {
        for (FieldType c: FieldType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
